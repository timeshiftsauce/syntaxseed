services:
  backend:
    image: crpi-n43n60vraettswns.cn-shenzhen.personal.cr.aliyuncs.com/sqj_zcl/blog-serves:1.0.0
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "7204:7204"
    depends_on:
      - database
      - redis
    environment:
      NODE_ENV: production
      PORT: 7204
      APP_NAME: SyntaxSeed
      APP_VERSION: 1.0.0

      CLUSTER_ENABLED: true
      CLUSTER_WORKERS: 2

      DB_HOST: database
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: your-secure-db-password
      DB_NAME: syntaxseed
      DB_CHARSET: utf8mb4
      DB_TIMEZONE: "+08:00"

      DB_POOL_MIN: 5
      DB_POOL_MAX: 20
      DB_POOL_ACQUIRE_TIMEOUT: 30000
      DB_POOL_IDLE_TIMEOUT: 300000

      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: your-secure-redis-password
      REDIS_DB: 0
      REDIS_PREFIX: "syntax:prod:"
      REDIS_CONNECT_TIMEOUT: 10000
      REDIS_COMMAND_TIMEOUT: 5000

      JWT_ACCESS_SECRET: your-super-secure-access-secret-key-change-in-production
      JWT_ACCESS_EXPIRES_IN: 300
      JWT_REFRESH_SECRET: your-super-secure-refresh-secret-key-change-in-production
      JWT_REFRESH_EXPIRES_IN: 864000
      SESSION_SECRET: your-super-secure-session-secret-change-in-production

      MAIL_HOST: smtp.example.com
      MAIL_PORT: 587
      MAIL_SECURE: false
      MAIL_USER: your-email@example.com
      MAIL_PASS: your-email-password
      MAIL_FROM: noreply@syntaxseed.com

      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100

      LOG_LEVEL: info
      LOG_FILE_ENABLED: false
      LOG_FILE_PATH: /app/logs

      MONITOR_INTERVAL: 30000
      HEALTH_CHECK_TIMEOUT: 5000

      REQUEST_TIMEOUT: 30000
      KEEP_ALIVE_TIMEOUT: 5000
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7204/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "2.0"
        reservations:
          memory: 1G
          cpus: "1.0"

  frontend:
    image: crpi-n43n60vraettswns.cn-shenzhen.personal.cr.aliyuncs.com/sqj_zcl/blog-clinent:1.0.3
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
      args:
        - VITE_API_BASEURL=/api
        - VITE_staticHost=./
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      NODE_ENV: production
    volumes:
      - ./web/head.jpg:/usr/share/nginx/html/head.jpg:ro
    restart: unless-stopped

  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: your-secure-db-password
      MYSQL_DATABASE: syntaxseed
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./syntaxseed.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 1G
          cpus: "0.5"

  redis:
    image: redis:7-alpine
    #删掉当前注释编辑 下面【your-secure-redis-password】
    command: redis-server --requirepass 【your-secure-redis-password】 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

volumes:
  mysql_prod_data:
  redis_prod_data:
  app_logs:
