version: "3.8"

services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "7204:7204"
    depends_on:
      - database
      - redis
    environment:
      NODE_ENV: production
      PORT: 7204
      APP_NAME: SyntaxSeed
      APP_VERSION: 1.0.0
      CLUSTER_ENABLED: true
      CLUSTER_WORKERS: 2
      DB_HOST: database
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: syntaxseed_password
      DB_NAME: syntaxseed
      DB_CHARSET: utf8mb4
      DB_TIMEZONE: "+08:00"
      DB_POOL_MIN: 2
      DB_POOL_MAX: 14
      DB_POOL_ACQUIRE_TIMEOUT: 30000
      DB_POOL_IDLE_TIMEOUT: 30000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      REDIS_DB: 0
      REDIS_PREFIX: "syntax:"
      REDIS_CONNECT_TIMEOUT: 10000
      REDIS_COMMAND_TIMEOUT: 5000
      JWT_ACCESS_SECRET: your-super-secure-access-secret-key-change-in-production
      JWT_ACCESS_EXPIRES_IN: 300
      JWT_REFRESH_SECRET: your-super-secure-refresh-secret-key-change-in-production
      JWT_REFRESH_EXPIRES_IN: 864000
      SESSION_SECRET: your-super-secure-session-secret-change-in-production
      MAIL_HOST: smtp.example.com
      MAIL_PORT: 587
      MAIL_SECURE: false
      MAIL_USER: user@example.com
      MAIL_PASS: your-email-password
      MAIL_FROM: "noreply@syntaxseed.com"
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
      LOG_LEVEL: info
      LOG_FILE_ENABLED: true
      LOG_FILE_PATH: ./logs
      MONITOR_INTERVAL: 3000
      HEALTH_CHECK_TIMEOUT: 3000
      REQUEST_TIMEOUT: 30000
      KEEP_ALIVE_TIMEOUT: 5000
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:7204/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  database:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=syntaxseed_password
      - MYSQL_DATABASE=syntaxseed
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    ports:
      - "3307:3306" # 映射到主机的 3307 端口，避免与本地 MySQL 冲突
    volumes:
      - mysql_data:/var/lib/mysql
      - ./syntaxseed.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
